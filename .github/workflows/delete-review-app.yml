name: Delete Review App

on:
  pull_request:
    types: [closed]
    branches: [main]

jobs:
  delete-review-app:
    name: Delete Review App ${{ github.event.pull_request.number }}
    concurrency: deploy_review_${{ github.event.pull_request.number }}
    if: ${{ contains(github.event.pull_request.labels.*.name, 'deploy') }}
    runs-on: ubuntu-latest
    environment: review
    steps:
      - uses: actions/checkout@v3
      - name: Extract configuration from tfvars
        id: config
        run: |
          APP_KEY_VAULT=$(jq -r '.app_key_vault' $TFVARS)
          NAMESPACE=$(jq -r '.namespace' $TFVARS)
          if [ -z "$APP_KEY_VAULT" ]; then
            echo "::error ::Failed to extract app_key_vault from $TFVARS"
            exit 1
          fi
          if [ -z "$NAMESPACE" ]; then
            echo "::error ::Failed to extract namespace from $TFVARS"
            exit 1
          fi
          echo ::set-output name=app_key_vault::$APP_KEY_VAULT
          echo ::set-output name=namespace::$NAMESPACE
        shell: bash
        env:
          TFVARS: workspace_variables/review.tfvars.json
        working-directory: terraform/aks

      - uses: Azure/login@v1
        with:
          creds: ${{ secrets.azure_credentials }}

      - uses: Azure/get-keyvault-secrets@v1
        id: get_secrets
        with:
          keyvault: ${{ steps.config.outputs.app_key_vault }}
          secrets: "TFSTATE-CONTAINER-ACCESS-KEY,PAAS-USER,PAAS-PASSWORD"

      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.0.10
          terraform_wrapper: false

      - name: Set Environment variables
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          TF_STATE_FILE=review/review-pr-$PR_NUMBER.tfstate
          echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_ENV
          echo "TF_STATE_FILE=$TF_STATE_FILE" >> $GITHUB_ENV
          pr_state_file=$(az storage blob list -c faltrn-tfstate \
            --account-key ${{ steps.get_secrets.outputs.TFSTATE-CONTAINER-ACCESS-KEY }} \
            --account-name "s189t01faltrntfstatervsa" \
            --prefix $TF_STATE_FILE --query "[].name" -o tsv)
          if [ -n "$pr_state_file" ]; then echo "TF_STATE_EXISTS=true" >> $GITHUB_ENV; fi;
      - name: Terraform
        if: env.TF_STATE_EXISTS == 'true'
        id: terraform
        run: |
          make ci review terraform-destroy
        env:
          ARM_ACCESS_KEY: ${{ steps.get_secrets.outputs.TFSTATE-CONTAINER-ACCESS-KEY }}
          TF_VAR_azure_sp_credentials_json: ${{ secrets.azure_credentials }}
          TF_VAR_flt_docker_image: "ghcr.io/dfe-digital/find-a-lost-trn:no-tag"
          pr_id: ${{ github.event.pull_request.number }}
        shell: bash

      - name: Delete tf state file
        if: env.TF_STATE_EXISTS == 'true'
        run: |
          az storage blob delete -c faltrn-tfstate --name ${{ env.TF_STATE_FILE }} \
          --account-key ${{ steps.get_secrets.outputs.TFSTATE-CONTAINER-ACCESS-KEY }} \
          --account-name "s189t01faltrntfstatervsa"
